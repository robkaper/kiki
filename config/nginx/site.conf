server {
    listen 80;
    listen [::]:80;

    server_name example.com www.example.com;

    return 301 https://$host$request_uri;

    access_log /var/log/nginx/example.com_access.log;
    error_log /var/log/nginx/example.com_error.log;

    return 404;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name example.com www.example.com;

    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 127.0.0.1 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    ssl_buffer_size 4k;
    client_body_buffer_size 8M;
    client_max_body_size 32M;

    server_tokens off;

    sub_filter_once off;
    # Equal to Config::$cspNonce
    sub_filter exampleRandomString $ssl_session_id;

    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "same-origin" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Content-Security-Policy "frame-ancestors 'none'; base-uri 'none'; form-action 'self'; default-src 'none'; font-src 'self'; style-src 'self' 'nonce-$ssl_session_id'; script-src 'self' 'nonce-$ssl_session_id'; img-src 'self'; connect-src 'self';" always;

    root /var/www/example.com/htdocs;
    index index.php index.html /kiki.php;

    access_log /var/log/nginx/example.com_access.log;
    error_log /var/log/nginx/example.com_error.log info;
    rewrite_log off;

    location / {
        # Strip PHP extension
        # if (!-e $request_filename) {
        #    rewrite ^/([a-z\-/]+)$ /$1.php;
        # }
        # First attempt to serve request as file, then as directory, then fall back to displaying a 404.
        try_files $uri $uri/ /kiki.php?$args;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.4-fpm-example.sock;
    }

    location ~ /((images|styles|fonts|vendor)/(.*)|favicon)\.(?:css|js|woff2|jpg|png|webp|ico)$ {
        expires 365d;
        gzip on;
	gzip_types text/css application/javascript font/woff2 image/jpeg image/png image/webp image/x-icon;

	types {
            text/css css;
            text/css .min.css;
            application/javascript js;
            font/woff2 woff2;
            image/jpeg jpeg jpg;
            image/png png;
            image/webp webp;
            image/x-icon ico;
	}

        add_header Cache-Control "public";
	# dup but nginx only does the most inner tree, apparently
        add_header X-XSS-Protection "1; mode=block";
	add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "same-origin" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains;" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header Content-Security-Policy "frame-ancestors 'none'; base-uri 'none'; form-action 'self'; default-src 'none'; font-src 'self'; style-src 'self' 'nonce-$ssl_session_id'; script-src 'self' 'nonce-$ssl_session_id'; img-src 'self'; connect-src 'self';" always;
    }
}

